

template <typename ReaderType>
void ${class.ShortName}::deserialize(ReaderType& reader) {
    switch (reader.version().hash()) {

#foreach( $classVerion in $class.getClassVersions().entrySet() )
        case ${classVerion.Key.SchemaHash}: // version $classVerion.Key.VersionNumber, $classVerion.Key.Name
#foreach( $base in $classVerion.Value.BaseTypes )
            ${base.ShortName}::deserialize(reader);
#end
#foreach( $field in $classVerion.Value.Fields )
            reader.read($util.getTeslaTypeTag($field)(), "$field.displayName", $field.Name);
#end
            break;
#end
        
    default:
        break;
    }
}

template <typename WriterType>
void ${class.ShortName}::serialize(WriterType& writer) const {
    switch (writer.version().hash()) {
#foreach( $classVerion in $class.getClassVersions().entrySet() )
        case ${classVerion.Key.SchemaHash}: // version $classVerion.Key.VersionNumber, $classVerion.Key.Name
#foreach( $base in $classVerion.Value.BaseTypes )
            ${base.ShortName}::serialize(writer);
#end
#foreach( $field in $classVerion.Value.Fields )
            writer.write($util.getTeslaTypeTag($field)(), "$field.displayName", $field.Name);
#end
            break;
#end
        
    default:
        break;
    }
}
